name: CI to production server
on:
  workflow_run:
    workflows: Tests and builds app
    branches: main
    types: completed
jobs:
  deploy:
    # check if the previous job was successful
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    steps:
      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@master
        env:
          PRODUCTION: true
          APP_PORT: ${{ secrets.APP_PORT }}
          DATABASE_HOST: ${{ secrets.DATABASE_HOST }}
          DATABASE_PORT: ${{ secrets.DATABASE_PORT }}
          DATABASE_USER: ${{ secrets.DATABASE_USER }}
          DATABASE_PASS: ${{ secrets.DATABASE_PASS }}
          DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
          DISCORD_CLIENT_ID: ${{ secrets.DISCORD_CLIENT_ID }}
          DISCORD_CLIENT_SECRET: ${{ secrets.DISCORD_CLIENT_SECRET }}
          DISCORD_CLIENT_TOKEN: ${{ secrets.DISCORD_CLIENT_TOKEN }}
          DISCORD_CALLBACK_URL: ${{ secrets.DISCORD_CALLBACK_URL }}
          DISCORD_CANDIDATURE_CHANNEL_ID: ${{ secrets.DISCORD_CANDIDATURE_CHANNEL_ID }}
          DISCORD_GUILD_ID: ${{ secrets.DISCORD_GUILD_ID }}
          DISCORD_ROLE_GHOST: ${{ secrets.DISCORD_ROLE_GHOST }}
          DISCORD_ROLE_CANDIDATE: ${{ secrets.DISCORD_ROLE_CANDIDATE }}
          DISCORD_ROLE_PRE_ACCEPTED: ${{ secrets.DISCORD_ROLE_PRE_ACCEPTED }}
          DISCORD_ROLE_PRETOPIEN: ${{ secrets.DISCORD_ROLE_PRETOPIEN }}
          DISCORD_ROLE_LITOPIEN: ${{ secrets.DISCORD_ROLE_LITOPIEN }}
          DISCORD_ROLE_ACTIVE_LITOPIEN: ${{ secrets.DISCORD_ROLE_ACTIVE_LITOPIEN }}
          DISCORD_ROLE_INACTIVE_LITOPIEN: ${{ secrets.DISCORD_ROLE_INACTIVE_LITOPIEN }}
          DISCORD_ROLE_REFUSED: ${{ secrets.DISCORD_ROLE_REFUSED }}
          DISCORD_ROLE_LITOGOD: ${{ secrets.DISCORD_ROLE_LITOGOD }}
          DISCORD_ROLE_UNIQUE_GOD: ${{ secrets.DISCORD_ROLE_UNIQUE_GOD }}
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          password: ${{ secrets.VPS_PASSWORD }}
          port: ${{ secrets.VPS_PORT }}
          envs: PRODUCTION,APP_PORT,DATABASE_HOST,DATABASE_PORT,DATABASE_USER,DATABASE_PASS,DATABASE_NAME,DISCORD_CLIENT_ID,DISCORD_CLIENT_SECRET,DISCORD_CLIENT_TOKEN,DISCORD_CALLBACK_URL,DISCORD_CANDIDATURE_CHANNEL_ID,DISCORD_GUILD_ID,DISCORD_ROLE_GHOST,DISCORD_ROLE_CANDIDATE,DISCORD_ROLE_PRE_ACCEPTED,DISCORD_ROLE_PRETOPIEN,DISCORD_ROLE_LITOPIEN,DISCORD_ROLE_ACTIVE_LITOPIEN,DISCORD_ROLE_INACTIVE_LITOPIEN,DISCORD_ROLE_REFUSED,DISCORD_ROLE_LITOGOD,DISCORD_ROLE_UNIQUE_GOD
          script: |
            cd ${{ secrets.DEPLOY_PATH }}
            git pull
            npm install
            npm run build
            npm run pm2:stop
            npm run pm2:start
